<li class="li-tool li-drag-style @ToolColor">
    <div class="tool-container">
        <MudIcon Icon="@Item.Icon" Size="Size.Medium"></MudIcon>
        <div class="tool-sub-container">
            <p class="tool-name">@Item.Name</p>
            <p class="tool-description">@Item.Description</p>
            @if(Item.Client is not null) {
                <p class="tool-client-name">@Item.Client.GetShortName() - @Item.Client.DocumentNumber</p>
                var dossierTray = (DossierTrayResponse)Item.Value;
                if (accepetedStatusToDocument.Contains(Item.ItemStatus) && Item.OriginPlace.Equals("inputs"))
                {
                    <p class="registro">Documento Registrado: @dossierTray.Document!.Type</p>
                }
                if (acceptedStatusToPublicDeed.Contains(Item.ItemStatus) && Item.OriginPlace.Equals("inputs"))
                {
                    <p class="registro">Escritura Pública escogida: @Item.PublicDeed!.Title</p>
                }
                if (acceptedStatusToInfo.Contains(Item.ItemStatus) && Item.OriginPlace.Equals("inputs"))
                {
                    <div class="field-container">
                        <MudButton Class="mud-info-c">Ver Información</MudButton>
                        @if(Item.ItemStatus.Equals("evaluated")) {
                            <MudButton Class="mud-info-c">Ver Evaluación</MudButton>
                        }
                    </div>
                }

                if (PublicDeed is not null) {
                    if(acceptedDocumentTypes.Contains(dossierTray.Document!.Type)) {
                        <div class="field-container">
                            <a class="mud-info-c p-2" href="@PublicDeed.Url" target="_blank">Ver Escritura Pública</a>
                        </div>
                    }
                }

            }
        </div>
    </div>
</li>


